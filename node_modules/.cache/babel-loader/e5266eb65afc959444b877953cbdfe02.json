{"ast":null,"code":"var _jsxFileName = \"/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./Login.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [id, setid] = useState(\"\");\n  const [pw, setipw] = useState(\"\");\n  const num = pw.search(/[0-9]/g);\n  const eng = pw.search(/[a-z]/gi);\n  const spe = pw.search(/[`~!@@#$%^&*|₩₩₩'₩\";:₩/?]/gi);\n  const navigate = useNavigate();\n  const condition = id.includes(\"@\") && pw.length > 7 && num > -1 && eng > -1 && spe > -1; //id값변할때\n\n  function handleIdInput(event) {\n    setid(event.target.value);\n  } //pw값 변할때\n\n\n  function handlePwInput(event) {\n    setipw(event.target.value);\n  } //pw show or hide\n\n\n  function passwordToText(e) {\n    const pwDom = document.getElementsByClassName(\"pw\")[0];\n\n    if (pwDom.type === \"password\") {\n      pwDom.type = \"text\";\n      e.target.innerHTML = \"hide\";\n    } else {\n      pwDom.type = \"password\";\n      e.target.innerHTML = \"show\";\n    }\n  } // 버튼 클릭시 페이지 이동\n\n\n  function toChangePage() {\n    if (condition) {\n      sessionStorage.setItem(\"id\", id);\n      navigate(\"/List\");\n    } else alert(\"이메일과 비밀번호가 올바르지 않습니다.\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"junhyeok\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/logo.png\",\n          alt: \"\\uB85C\\uACE0\\uC774\\uBBF8\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"id\",\n          maxLength: \"50\",\n          placeholder: \"\\uC804\\uD654\\uBC88\\uD638, \\uC0AC\\uC6A9\\uC790 \\uC774\\uB984 \\uB610\\uB294 \\uC774\\uBA54\\uC77C\",\n          autoComplete: \"off\",\n          onChange: handleIdInput,\n          style: {\n            borderColor: id.includes(\"@\") ? \"#659c31\" : \"#dddddd\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"pw\",\n          maxLength: \"50\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          onChange: handlePwInput,\n          style: {\n            borderColor: pw.length > 7 && num > -1 && eng > -1 && spe > -1 ? \"#659c31\" : \"#dddddd\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"showHide\",\n          type: \"button\",\n          onClick: passwordToText,\n          children: \"show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toList\",\n          type: \"button\",\n          onClick: toChangePage,\n          style: {\n            backgroundColor: condition ? \"#79BAF2\" : \"#b4d2e8\"\n          },\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-forget\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"RdxKMU3SKtNZ67JYVdRE40aW3jM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/login/Login.js"],"names":["React","useState","useEffect","useNavigate","Login","id","setid","pw","setipw","num","search","eng","spe","navigate","condition","includes","length","handleIdInput","event","target","value","handlePwInput","passwordToText","e","pwDom","document","getElementsByClassName","type","innerHTML","toChangePage","sessionStorage","setItem","alert","borderColor","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./Login.scss\";\n\nfunction Login() {\n  const [id, setid] = useState(\"\");\n  const [pw, setipw] = useState(\"\");\n  const num = pw.search(/[0-9]/g);\n  const eng = pw.search(/[a-z]/gi);\n  const spe = pw.search(/[`~!@@#$%^&*|₩₩₩'₩\";:₩/?]/gi);\n  const navigate = useNavigate();\n  const condition =\n    id.includes(\"@\") && pw.length > 7 && num > -1 && eng > -1 && spe > -1;\n\n  //id값변할때\n  function handleIdInput(event) {\n    setid(event.target.value);\n  }\n  //pw값 변할때\n  function handlePwInput(event) {\n    setipw(event.target.value);\n  }\n  //pw show or hide\n  function passwordToText(e) {\n    const pwDom = document.getElementsByClassName(\"pw\")[0];\n    if (pwDom.type === \"password\") {\n      pwDom.type = \"text\";\n      e.target.innerHTML = \"hide\";\n    } else {\n      pwDom.type = \"password\";\n      e.target.innerHTML = \"show\";\n    }\n  }\n  // 버튼 클릭시 페이지 이동\n  function toChangePage() {\n    if (condition) {\n      sessionStorage.setItem(\"id\", id);\n      navigate(\"/List\");\n    } else alert(\"이메일과 비밀번호가 올바르지 않습니다.\");\n  }\n\n  return (\n    <div className=\"junhyeok\">\n      <div className=\"login\">\n        {/* 로고이미지 */}\n        <div className=\"login-logo\">\n          <img src=\"/images/logo.png\" alt=\"로고이미지\" />\n        </div>\n        {/* 제출할것들 */}\n        <form className=\"login-form\">\n          {/* 아이디 */}\n          <input\n            className=\"id\"\n            maxLength=\"50\"\n            placeholder=\"전화번호, 사용자 이름 또는 이메일\"\n            autoComplete=\"off\"\n            onChange={handleIdInput}\n            style={{ borderColor: id.includes(\"@\") ? \"#659c31\" : \"#dddddd\" }}\n          />\n          {/* 비밀번호 */}\n          <input\n            type=\"password\"\n            className=\"pw\"\n            maxLength=\"50\"\n            placeholder=\"비밀번호\"\n            onChange={handlePwInput}\n            style={{\n              borderColor:\n                pw.length > 7 && num > -1 && eng > -1 && spe > -1\n                  ? \"#659c31\"\n                  : \"#dddddd\",\n            }}\n          />\n          {/* show or hide btn */}\n          <button className=\"showHide\" type=\"button\" onClick={passwordToText}>\n            show\n          </button>\n          {/* 페이지 이동 버튼 */}\n          <button\n            className=\"toList\"\n            type=\"button\"\n            onClick={toChangePage}\n            style={{ backgroundColor: condition ? \"#79BAF2\" : \"#b4d2e8\" }}\n          >\n            로그인\n          </button>\n        </form>\n        {/* 비밀번호찾기 */}\n        <div className=\"login-forget\">\n          <a href=\"#\">비밀번호를 잊으셨나요?</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}