[{"/home/ljh/Desktop/Development/Wecode/webucks-react/src/index.js":"1","/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/login/Login.js":"2","/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/list/List.js":"3","/home/ljh/Desktop/Development/Wecode/webucks-react/src/Router.js":"4","/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/detail/Detail.js":"5","/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/Component/TopsNav.js":"6"},{"size":206,"mtime":1638167983011,"results":"7","hashOfConfig":"8"},{"size":2871,"mtime":1638353437416,"results":"9","hashOfConfig":"8"},{"size":2004,"mtime":1638355009124,"results":"10","hashOfConfig":"8"},{"size":502,"mtime":1638244925907,"results":"11","hashOfConfig":"8"},{"size":4934,"mtime":1638355177364,"results":"12","hashOfConfig":"8"},{"size":487,"mtime":1638173986950,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"zxk3cw",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/ljh/Desktop/Development/Wecode/webucks-react/src/index.js",[],["28","29"],"/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/login/Login.js",["30","31"],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport \"./Login.scss\";\n\nfunction Login() {\n  const [id, setid] = useState(\"\");\n  const [pw, setipw] = useState(\"\");\n  const num = pw.search(/[0-9]/g);\n  const eng = pw.search(/[a-z]/gi);\n  const spe = pw.search(/[`~!@@#$%^&*|₩₩₩'₩\";:₩/?]/gi);\n  const navigate = useNavigate();\n  const condition =\n    id.includes(\"@\") && pw.length > 7 && num > -1 && eng > -1 && spe > -1;\n\n  //id값변할때\n  function handleIdInput(event) {\n    setid(event.target.value);\n  }\n  //pw값 변할때\n  function handlePwInput(event) {\n    setipw(event.target.value);\n  }\n  //pw show or hide\n  function passwordToText(e) {\n    const pwDom = document.getElementsByClassName(\"pw\")[0];\n    if (pwDom.type === \"password\") {\n      pwDom.type = \"text\";\n      e.target.innerHTML = \"hide\";\n    } else {\n      pwDom.type = \"password\";\n      e.target.innerHTML = \"show\";\n    }\n  }\n  // 버튼 클릭시 페이지 이동\n  function toChangePage() {\n    if (condition) {\n      sessionStorage.setItem(\"id\", id);\n      navigate(\"/List\");\n    } else alert(\"이메일과 비밀번호가 올바르지 않습니다.\");\n  }\n\n  return (\n    <div className=\"junhyeok\">\n      <div className=\"login\">\n        {/* 로고이미지 */}\n        <div className=\"login-logo\">\n          <img src=\"/images/logo.png\" alt=\"로고이미지\" />\n        </div>\n        {/* 제출할것들 */}\n        <form className=\"login-form\">\n          {/* 아이디 */}\n          <input\n            className=\"id\"\n            maxLength=\"50\"\n            placeholder=\"전화번호, 사용자 이름 또는 이메일\"\n            autoComplete=\"off\"\n            onChange={handleIdInput}\n            style={{ borderColor: id.includes(\"@\") ? \"#659c31\" : \"#dddddd\" }}\n          />\n          {/* 비밀번호 */}\n          <input\n            type=\"password\"\n            className=\"pw\"\n            maxLength=\"50\"\n            placeholder=\"비밀번호\"\n            onChange={handlePwInput}\n            style={{\n              borderColor:\n                pw.length > 7 && num > -1 && eng > -1 && spe > -1\n                  ? \"#659c31\"\n                  : \"#dddddd\",\n            }}\n          />\n          {/* show or hide btn */}\n          <button className=\"showHide\" type=\"button\" onClick={passwordToText}>\n            show\n          </button>\n          {/* 페이지 이동 버튼 */}\n          <button\n            className=\"toList\"\n            type=\"button\"\n            onClick={toChangePage}\n            style={{ backgroundColor: condition ? \"#79BAF2\" : \"#b4d2e8\" }}\n          >\n            로그인\n          </button>\n        </form>\n        {/* 비밀번호찾기 */}\n        <div className=\"login-forget\">\n          <a href=\"#\">비밀번호를 잊으셨나요?</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/list/List.js",[],"/home/ljh/Desktop/Development/Wecode/webucks-react/src/Router.js",[],"/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/detail/Detail.js",[],"/home/ljh/Desktop/Development/Wecode/webucks-react/src/pages/Component/TopsNav.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":27,"nodeType":"38","messageId":"39","endLine":1,"endColumn":36},{"ruleId":"40","severity":1,"message":"41","line":90,"column":11,"nodeType":"42","endLine":90,"endColumn":23},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]